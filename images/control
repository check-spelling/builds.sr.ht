#!/usr/bin/env bash
set -e

self=$(readlink -f $0)
self=$(dirname "$self")

base=$1
cmd=$2
shift 2

if [ ! -d $self/$base ]
then
    echo "Unknown base image $base"
    exit 1
fi

ssh_opts="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

function guest_ssh() {
    ssh $ssh_opts "$@"
}

function boot() {
    port=$1
    id=$(docker run -d \
        -v "$self/$base":/base:ro \
        --mount type=tmpfs,destination=/var/tmp \
        --device /dev/kvm \
        -p 127.0.0.1:$port:$port \
        qemu /bin/qemu-system-x86_64 \
            -m ${MEMORY:-2048} \
            -net nic,model=virtio -net user,hostfwd=tcp::$port-:22 \
            -cpu host \
            -enable-kvm \
            -nographic \
            -drive file="/base/root.img.qcow2",media=disk,snapshot=on,if=virtio \
            -kernel /base/$guest_kernel \
            -initrd /base/$guest_initrd \
            -append "root=/dev/vda rw console=ttyS0 $cmdline" > /dev/null)
    echo $id > /tmp/qemu-$port.id
}

function cleanup() {
    port=$1
    # Power off
    if [ $# == 1 ]
    then
        cid=$(cat /tmp/qemu-$port.id)
        if [ "$cid" != "" ]
        then
            guest_ssh -p $port build@localhost $poweroff_cmd || true
            sleep 2
            docker kill $cid && sleep 2 || true
            docker kill -s 9 $cid && sleep 2 || true
            rm /tmp/qemu-$port.id
        fi
    fi
}

. $self/$base/functions

case "$cmd" in
    boot)
        boot "$@"
        ;;
    cleanup)
        cleanup "$@"
        ;;
    sanity-check)
        sanity_check "$@"
        ;;
    install)
        install "$@"
        ;;
    add-repo)
        add_repository "$@"
        ;;
    ssh)
        port=$1
        shift
        guest_ssh -p "$port" build@localhost "$@"
        ;;
    *)
        echo "Unknown command $cmd"
        ;;
esac
