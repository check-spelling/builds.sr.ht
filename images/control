#!/usr/bin/env bash
set -e

self=$(readlink -f $0)
self=$(dirname "$self")

base=$1
cmd=$2
shift 2

if [ ! -d $base ]
then
    echo "Unknown base image $base"
    exit 1
fi

ssh_opts="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

function guest_ssh() {
    ssh $ssh_opts "$@"
}

function qemu_pid() {
    ps aux | awk '{ printf "%s ", $2; for(i=11;i<=NF;i++){printf "%s ", $i}; printf "\n" }' \
        | grep -E "^[0-9]+ qemu-system-x86_64.*hostfwd=tcp::$port" \
        | awk '{ print $1 }' | head -n 1
}

function boot() {
    port=$1
    qemu-system-x86_64 \
        -m ${MEMORY:-2048} \
        -net nic,model=virtio -net user,hostfwd=tcp::$port-:22 \
        -cpu host \
        -enable-kvm \
        -nographic \
        -drive file="$self/$base/root.img.qcow2",media=disk,snapshot=on,if=virtio \
        -kernel "$self/$base"/$guest_kernel \
        -initrd "$self/$base"/$guest_initrd \
        -append "root=/dev/vda rw console=ttyS0 $cmdline"
}

function cleanup() {
    port=$1
    # Power off
    if [ $# == 1 ]
    then
        pid=$(qemu_pid)
        if [ "$pid" != "" ]
        then
            guest_ssh -p $port build@localhost $poweroff_cmd || true
            sleep 2
            kill $pid && sleep 2 || true
            kill -9 $pid && sleep 2 || true
        fi
    fi
}

. $self/$base/functions

case "$cmd" in
    boot)
        boot "$@"
        ;;
    cleanup)
        cleanup "$@"
        ;;
    sanity-check)
        sanity_check "$@"
        ;;
    install)
        install "$@"
        ;;
    add-repo)
        add_repository "$@"
        ;;
    ssh)
        port=$1
        shift
        guest_ssh -p "$port" build@localhost "$@"
        ;;
    *)
        echo "Unknown command $cmd"
        ;;
esac
