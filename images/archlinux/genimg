#!/bin/sh -eux
root=root
arch=x86_64

cleanup() {
	# The order here is important if you don't want to hose your mounts
	umount -Rf "$root" || true
	qemu-nbd --disconnect /dev/nbd0 || true
	rm -rf "$root" || true
}

mkdir -p "$arch"

qemu-img create -f qcow2 $arch/root.img.qcow2 20G
modprobe nbd
qemu-nbd --connect=/dev/nbd0 $arch/root.img.qcow2
trap cleanup EXIT

mkdir -p "$root"
mkfs.ext4 /dev/nbd0
mount /dev/nbd0 "$root"

pacstrap root base base-devel git mercurial openssh mkinitcpio linux

run_root() {
    local cmd="$@"
    chroot $root /bin/bash -c "$cmd"
}

run_normal() {
    local cmd="$@"
    chroot --userspec=$SUDO_UID:$SUDO_GID \
        $root \
        /bin/bash -c "cd /home/build && $cmd"
}

echo 'Server = http://lug.mtu.edu/archlinux/$repo/os/$arch' >> $root/etc/pacman.d/mirrorlist
echo 'nameserver 8.8.8.8' >> $root/etc/resolv.conf
echo '127.0.0.1 localhost.localdomain localhost' > $root/etc/hosts
echo '::1 localhost.localdomain localhost' >> $root/etc/hosts

mount --bind /proc $root/proc
mount --bind /sys $root/sys
mount --bind /dev $root/dev
mount --bind /dev/pts $root/dev/pts
mount --bind /dev/shm $root/dev/shm
mount --bind /run $root/run

cp mkinitcpio.conf $root/etc
cp pacman.conf $root/etc

reflector --protocol https --latest 30 --sort rate --save $root/etc/pacman.d/mirrorlist

mkdir -p $root/etc/pacman.d/hooks/
ln -s /dev/null $root/etc/pacman.d/hooks/90-linux.hook

sed -i 's/#en_US.UTF-8/en_US.UTF-8/' $root/etc/locale.gen
run_root locale-gen

cat >"$root"/etc/systemd/network/25-ens3.network <<EOF
[Match]
Name=ens3

[Network]
Address=10.0.2.15/24
Gateway=10.0.2.2
EOF

run_root systemctl enable systemd-networkd.service
run_root systemctl enable systemd-timesyncd.service

run_root mkinitcpio -p linux

run_root groupadd sudo
run_root useradd -mG sudo,kvm build
run_root passwd -d build
echo '%sudo ALL=(ALL) NOPASSWD: ALL' >> $root/etc/sudoers
echo 'source /etc/profile.d/perlbin.sh' > $root/home/build/.bashrc
echo 'export EDITOR=true' > $root/home/build/.bashrc

sed -e 's/#PermitEmptyPasswords no/PermitEmptyPasswords yes/' -i $root/etc/ssh/sshd_config
run_root systemctl enable sshd

echo "makeopts=(--skippgpcheck)" >> $root/etc/makepkg.conf

run_normal curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/yay-bin.tar.gz
run_normal tar xf yay-bin.tar.gz
run_normal 'cd yay-bin && makepkg -si --noconfirm --skippgpcheck'
run_normal rm -r yay-bin yay-bin.tar.gz

pkill gpg-agent || true
cp $root/boot/vmlinuz-linux ./$arch/kernel
cp $root/boot/initramfs-linux.img ./$arch/initrd
