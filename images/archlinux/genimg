#!/usr/bin/env bash
if [ $EUID != 0 ]
then
    echo "Must be run as root"
    exit 1
fi
set -xe

root=root.x86_64
bootstrap_date=$(date +'%Y.%m.01')
bootstrap=archlinux-bootstrap-$bootstrap_date-x86_64.tar.gz

if [ ! -f $bootstrap ]
then
    wget -c http://mirrors.kernel.org/archlinux/iso/$bootstrap_date/$bootstrap
fi
tar xf $bootstrap

function run_root() {
    local cmd="$@"
    chroot $root /bin/bash -c "$cmd"
}

function run_normal() {
    local cmd="$@"
    chroot --userspec=$SUDO_UID:$SUDO_GID \
        $root \
        /bin/bash -c "cd /home/build && $cmd"
}

echo 'Server = http://mirror.us.leaseweb.net/archlinux/$repo/os/$arch' >> $root/etc/pacman.d/mirrorlist
echo 'nameserver 8.8.8.8' >> $root/etc/resolv.conf

mount $root $root --bind
mount --bind /proc $root/proc
mount --bind /sys $root/sys
mount --bind /dev $root/dev
mount --bind /dev/pts $root/dev/pts
mount --bind /dev/shm $root/dev/shm
mount --bind /run $root/run

cp mkinitcpio.conf $root/etc

run_root pacman -Syy
run_root pacman-key --init
run_root pacman-key --populate archlinux
run_root pacman -Syu --force --noconfirm pacman-mirrorlist
run_root pacman -Syu --force --noconfirm \
    base-devel \
    git \
    openssh \
    linux \
    mkinitcpio \
    systemd-sysvcompat \
    dhcpcd

sed -i 's/#en_US.UTF-8/en_US.UTF-8/' $root/etc/locale.gen
run_root locale-gen

run_root systemctl enable dhcpcd
run_root systemctl enable systemd-timesyncd.service

run_root groupadd sudo
run_root useradd -mG sudo build
run_root passwd -d build
echo '%sudo ALL=(ALL) NOPASSWD: ALL' >> $root/etc/sudoers

sed -i 's/#PermitEmptyPasswords no/PermitEmptyPasswords yes/' $root/etc/ssh/sshd_config
run_root systemctl enable sshd

run_normal curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/cower.tar.gz
run_normal tar xf cower.tar.gz
run_normal 'cd cower && makepkg -si --noconfirm --skippgpcheck'
run_normal rm -r cower cower.tar.gz

run_normal curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/pacaur.tar.gz
run_normal tar xf pacaur.tar.gz
run_normal 'cd pacaur && makepkg -si --noconfirm --skippgpcheck'
run_normal rm -r pacaur pacaur.tar.gz

pkill gpg-agent
umount -R $root
cp $root/boot/vmlinuz-linux ./kernel
cp $root/boot/initramfs-linux.img ./initrd
virt-make-fs --format=qcow2 --size=+4G $root root.img.qcow2
rm -rf $root
