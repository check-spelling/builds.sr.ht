#!/bin/sh -eux

echo "$release" >/dev/null # fail on -u if release unset
arch="${1:-amd64}"

export DISTRIBUTIONS="kernel.txz base.txz ports.txz"
export BSDINSTALL_DISTSITE="https://download.freebsd.org/ftp/releases/$arch/$release/"
export BSDINSTALL_DISTDIR="/usr/freebsd-dist/$arch/$release"
export BSDINSTALL_LOG="/tmp/bsdinstall.log"

cleanup() {
	cat "$BSDINSTALL_LOG" || true
	# The order here is important if you don't want to hose your mounts
	umount -f /mnt/dev/pts 2>/dev/null || true
	umount -f /mnt/dev/shm 2>/dev/null || true
	umount -f /mnt/dev 2>/dev/null || true
	umount -f /mnt/proc 2>/dev/null || true
	umount -f /mnt/run 2>/dev/null || true
	umount -f /mnt/sys 2>/dev/null || true
	umount -f /mnt/boot 2>/dev/null || true
	umount -f /mnt 2>/dev/null || true 
	mdconfig -d -u 0
}

# qemu-nbd is not supported, so we just create a raw image and convert it
rm -f "$BSDINSTALL_LOG"
qemu-img create -f raw root.img.raw 6G
mdconfig -a -t vnode -f root.img.raw -u 0
trap cleanup EXIT

export nonInteractive=YES
mkdir -p "$BSDINSTALL_DISTDIR"
bsdinstall distfetch
bsdinstall checksum
bsdinstall script ./install

trap - EXIT
cleanup

qemu-img convert -f raw -O qcow2 root.img.raw root.img.qcow2
rm root.img.raw

# Filesystem will be enlarged by growfs(7) on next startup
qemu-img resize root.img.qcow2 16G
