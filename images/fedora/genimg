#!/bin/sh -eux
echo "$release" >/dev/null # fail on -u if release unset
arch=${1:-x86_64}
case $arch in
	x86_64)
		iface=ens3
		;;
	*)
		echo "unsupported architecture $arch"
		exit 1
		;;
esac

cleanup() {
	# The order here is important if you don't want to hose your mounts
	umount /mnt/dev/pts 2>/dev/null || true
	umount /mnt/dev/shm 2>/dev/null || true
	umount /mnt/dev 2>/dev/null || true
	umount /mnt/proc 2>/dev/null || true
	umount /mnt/run 2>/dev/null || true
	umount /mnt/sys 2>/dev/null || true
	umount /mnt/boot 2>/dev/null || true
	umount /mnt 2>/dev/null || true
	qemu-nbd --disconnect /dev/nbd0 || true
}

mkdir -p "$arch"

qemu-img create -f qcow2 $arch/root.img.qcow2 20G
modprobe nbd max_part=16
qemu-nbd --connect=/dev/nbd0 $arch/root.img.qcow2
trap cleanup EXIT

sfdisk --no-reread /dev/nbd0 <<EOF
1M,100M,L,*
,2048M,S
,,L
EOF

mkfs.ext4 /dev/nbd0p1
mkswap /dev/nbd0p2
mkfs.ext4 /dev/nbd0p3

mount /dev/nbd0p3 /mnt
mkdir /mnt/boot
mount /dev/nbd0p1 /mnt/boot

dnf -y \
	--releasever=$release \
	--installroot=/mnt \
	--disablerepo='*' \
	--enablerepo=fedora \
	--enablerepo=updates install \
	systemd systemd-udev passwd dnf fedora-release

mount --bind /dev /mnt/dev
mount --bind /dev/pts /mnt/dev/pts
mount --bind /dev/shm /mnt/dev/shm
mount --bind /proc /mnt/proc
mount --bind /run /mnt/run
mount --bind /sys /mnt/sys

run_root() {
	chroot /mnt /usr/bin/env \
		PATH=/sbin:/usr/sbin:/bin:/usr/bin \
		sh -c "$*"
}

echo 'nameserver 8.8.8.8' >> /mnt/etc/resolv.conf
cat >/mnt/etc/systemd/network/25-$iface.network <<EOF
[Match]
Name=$iface

[Network]
Address=10.0.2.15/24
Gateway=10.0.2.2
EOF
echo build > /mnt/etc/hostname
cat > /mnt/etc/hosts <<EOF
127.0.0.1 localhost
127.0.0.1 build
EOF

run_root systemd-machine-id-setup
run_root systemctl enable systemd-networkd.service
run_root systemctl enable systemd-timesyncd.service

run_root dnf -y install kernel grubby syslinux syslinux-extlinux
run_root dnf -y install @development-tools git mercurial openssh-server sudo

if [ "$arch" = "x86_64" ]
then
	run_root extlinux -i /boot
	run_root dd if=/usr/share/syslinux/mbr.bin of=/dev/nbd0 bs=1 count=440
fi

run_root ln -sf /usr/share/zoneinfo/UTC /etc/localtime
run_root systemctl enable systemd-timesyncd.service

run_root groupadd sudo
run_root useradd -mG sudo build
run_root passwd -d build
echo '%sudo ALL=(ALL) NOPASSWD: ALL' >>/mnt/etc/sudoers

echo "PermitEmptyPasswords yes" >>/mnt/etc/ssh/sshd_config
echo ssh >>/mnt/etc/securetty
run_root systemctl enable sshd

linuxver=$(ls /mnt/boot | grep "vmlinuz.*.$arch" | cut -d- -f2-)

cat >/mnt/boot/extlinux.conf <<EOF
default fedora
label fedora
	linux vmlinuz-$linuxver
	initrd initramfs-$linuxver.img
	append root=/dev/vda3 rw quiet
EOF

cat >>/mnt/etc/fstab <<EOF
/dev/vda1 /boot ext4 rw,relatime,data=ordered 0 0
/dev/vda2 swap swap defaults 0 0
/dev/vda3 / ext4 rw,relatime,data=ordered 0 0
EOF

cat >/mnt/home/build/.gitconfig <<EOF
[user]
  name = builds.sr.ht
  email = builds@sr.ht
EOF

sync
